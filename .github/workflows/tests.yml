# SPDX-FileCopyrightText: 2025 Lennart Dohmann <lennart.dohmann@gdata.de>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Tests

defaults:
  run:
    shell: bash
on:
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
  workflow_dispatch:

jobs:
  build-devcontainer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/gdatasoftwareag/nextcloud/builder
          cacheFrom: ghcr.io/gdatasoftwareag/nextcloud/builder
          push: always

  tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/nextcloud/builder:latest
      env:
        IS_CI: 1
      options: --name nextcloud-antivirus-build-container
    needs: 
      - build-devcontainer
    steps:
      - uses: actions/checkout@v5

      - name: postCreateCommands
        run: |
          source .devcontainer/postCreateCommands.sh
      
      - name: add composer bin to path
        run: |
          echo $(composer config home --global)/vendor/bin >> $GITHUB_PATH

      - name: replace version in ./appinfo/info.xml
        if: startsWith(github.ref, 'refs/tags/')
        id: replace-version-in-info
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          sed -i "s/<version>0.0.0<\/version>/<version>$RELEASE_VERSION<\/version>/g" ./appinfo/info.xml

      - name: unittests
        env:
          CLIENT_ID: ${{ secrets.VAAS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.VAAS_CLIENT_SECRET }}
        run: |
          composer install
          ./vendor/bin/phpunit --bootstrap tests/unittests/bootstrap.php tests/unittests/ --testdox

      - name: install php-scoper
        run: |
          composer global require humbug/php-scoper
          echo $(composer config home --global) >> $GITHUB_PATH

      - name: install nextcloud
        env:
          CLIENT_ID: ${{ secrets.VAAS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.VAAS_CLIENT_SECRET }}
        run: ./scripts/run-app.sh 31.0.8 1

      - name: add builder into nextcloud network
        run: |
          docker network connect nextcloud-gdata-antivirus_nextcloud-network nextcloud-antivirus-build-container

      - name: run tests
        id: bats-tests
        env:
          CLIENT_ID: ${{ secrets.VAAS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.VAAS_CLIENT_SECRET }}
        run: |
          if bats --verbose-run --timing --trace ./tests/bats; then
            echo "bats_run=success" | tee -a "$GITHUB_OUTPUT";
          else
            echo "bats_run=fail" | tee -a "$GITHUB_OUTPUT";
          fi

      - name: fail if bats tests did fail
        if: steps.bats-tests.outputs.bats_run == 'fail'
        run: exit 1

      - uses: actions/upload-artifact@master
        with:
          name: build-dir
          path: build/

  release:
    needs:
      - tests
      - build-devcontainer
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@master
        with:
          name: build-dir
          path: build/

      - name: write version to output
        id: write-version-to-output
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Github Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/artifacts/*

      - name: Attach tarball to github release
        uses: svenstaro/upload-release-action@v2
        id: attach_to_release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/artifacts/gdatavaas.tar.gz
          asset_name: gdatavaas.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload app to Nextcloud appstore
        uses: nextcloud-releases/nextcloud-appstore-push-action@v1
        with:
          app_name: gdatavaas
          appstore_token: ${{ secrets.VAAS_APPSTORE_TOKEN }}
          download_url: ${{ steps.attach_to_release.outputs.browser_download_url }}
          app_private_key: ${{ secrets.VAAS_NEXTCLOUD_KEY }}
